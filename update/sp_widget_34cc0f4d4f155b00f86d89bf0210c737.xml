<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($uibModal, $scope, spModal) {
	/* widget controller */
	var c = this;

	c.updateQuotes = function() {
		//add a refreshing variable we can use to give feedback to the user
		c.refreshing = true;
		c.server.update().then(function(){
			//now indicate that the load has finished
			c.refreshing = false;
		});
	}

	c.updateQuotes();

	c.openSymbolModal = function() {
		c.newStock = '';
		c.modalInstance = $uibModal.open({
			templateUrl: 'stockModal',
			scope: $scope
		});
	}

	c.saveCloseModal = function() {
		c.modalInstance.close();
		c.refreshing = true;
		c.server.get({'newSymbol':c.newStock}).then(function(r){
			c.data.stockQuotes = r.data.stockQuotes;
			c.refreshing = false;
		});
	}

	c.closeModal = function() {
		c.modalInstance.close();
	}

	c.deleteSymbol = function(idx) {
		spModal.confirm("Are you sure you want to delete this favorite?").then(function(confirmed){
			if(confirmed){
				c.refreshing = true;
				c.server.get({'deleteSymbol': c.data.stockQuotes[idx].symbol}).then(function(r){
					c.data.stockQuotes = r.data.stockQuotes;
					c.refreshing = false;
				});
			}
		});
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.red {
  color: red;
}
.green {
  color: green;
}
.delete-cell {
  width: 37px;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>mydb-stock</id>
        <internal>false</internal>
        <link/>
        <name>Dashboard Stock</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */

	//data.symbols = getSymbols();
	data.stockQuotes = [];

	if (input) {
		if (input.newSymbol) {
			createNewSymbol(input.newSymbol);
		}
		if (input.deleteSymbol) {
			deleteSymbol(input.deleteSymbol);
		}
		data.symbols = getSymbols();
		data.stockQuotes = getStockQuotes();
	}

	function getStockQuotes() {
		var endpoint = "https://ws-api.iextrading.com/1.0/stock/market/batch?types=quote&symbols=" + data.symbols;
		var quoteArr = [];
		try {
			//var sm = new sn_ws.RESTMessageV1();
			var sm = new sn_ws.RESTMessageV2();
			sm.setEndpoint(endpoint);
			sm.setHttpMethod("GET");
			var response = sm.executeAsync();
			var status = response.getStatusCode();
			if (response.haveError()) {
				throw "getStockQuotes: failed with error message: " + response.getErrorMessage();
			}
			var responseBody = response.getBody();
			var respObj = new global.JSON().decode(responseBody);
			for (var key in respObj) {
				var quote = respObj[key].quote;
				var quoteObj = {
					'symbol': quote.symbol,
					'price': quote.latestPrice,
					'positive': quote.latestPrice - quote.open > -1
				}
				quoteArr.push(quoteObj);
			}		
		} catch (ex) {
			gs.addErrorMessage(ex.toString());
		}
		return quoteArr;
	}

	function createNewSymbol(sym) {
		var stock = new GlideRecord('x_snc_my_dashboard_stock');
		stock.setValue('user', gs.getUser().getID());
		stock.setValue('symbols', sym);
		stock.insert();
	}

	function deleteSymbol(sym) {
		var stock = new GlideRecord('x_snc_my_dashboard_stock');
		stock.addQuery('user', gs.getUser().getID());
		stock.addQuery('symbols', sym);
		stock.query();
		if (stock.next()) {
			stock.deleteRecord();
		}
	}

	function getSymbols() {
		var stockArr = [];
		var stock = new GlideRecord('x_snc_my_dashboard_stock');
		stock.addQuery('user', gs.getUser().getID());
		stock.query();
		while (stock.next()) {
			stockArr.push(stock.getValue('symbols'));
		}
		return stockArr.join(',');
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-04-04 19:12:01</sys_created_on>
        <sys_id>34cc0f4d4f155b00f86d89bf0210c737</sys_id>
        <sys_mod_count>26</sys_mod_count>
        <sys_name>Dashboard Stock</sys_name>
        <sys_package display_value="My Dashboard" source="x_snc_my_dashboard">e848ca014f915b00f86d89bf0210c785</sys_package>
        <sys_policy/>
        <sys_scope display_value="My Dashboard">e848ca014f915b00f86d89bf0210c785</sys_scope>
        <sys_update_name>sp_widget_34cc0f4d4f155b00f86d89bf0210c737</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-08-01 22:09:18</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading">
    <h4 class="panel-title">
      ${Stock}
      <button type="button" class="btn btn-default" ng-click="c.updateQuotes();">
        <i class="fa fa-refresh" ng-hide="c.refreshing"></i>
        <i class="fa fa-refresh fa-spin" ng-show="c.refreshing"></i>
      </button>
      <button type="button" class="btn btn-default" ng-click="c.openSymbolModal();">
        <i class="fa fa-plus"></i>
      </button>
    </h4>
  </div>
  <div ng-show="data.stockQuotes.length == 0" class="panel-body">
    <div class="row">
      <div class="col-md-12">
        ${Add a new Stock Symbol}
      </div>
    </div>
  </div>
  <table class="table" ng-show="data.stockQuotes.length > 0">
    <thead>
      <tr>
        <th>Symbol</th>
        <th>Price</th>
        <th></th>
      </tr>
    </thead>
    <tbody>
      <tr ng-repeat="stockQuote in data.stockQuotes">
        <td>{{stockQuote.symbol}}</td>
        <td>
          <span ng-class="{green:stockQuote.positive, red:!stockQuote.positive}">{{stockQuote.price}}</span>
        </td>
        <td class="delete-cell">
          <button type="button" class="btn btn-default" ng-click="c.deleteSymbol($index);">
            <i class="fa fa-times"></i>
          </button>
        </td>
      </tr>
    </tbody>
  </table>
</div>
&lt;script&gt;
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">${Add Stock Symbol}</h4>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <input ng-model="c.newStock" class="form-control" />
                </div>
            </div>
        </div>
        <div class="panel-footer text-right">
            <button class="btn btn-primary" ng-click="c.saveCloseModal();">${Save and Close}</button>
            <button class="btn btn-primary" ng-click="c.closeModal();">${Close}</button>
        </div>
    </div>
&lt;/script&gt;]]></template>
    </sp_widget>
</record_update>
